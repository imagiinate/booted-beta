/*
Theme created for use with Sequence.js (http://www.sequencejs.com/)

Theme: Basic Cross-fade
Version: 1.0
Theme Author: Ian Lunn @IanLunn
Author URL: http://www.ianlunn.co.uk/
Theme URL: http://www.sequencejs.com/themes/basic-crossfade/

This is a FREE theme and is available under a MIT License:
http://www.opensource.org/licenses/mit-license.php

Sequence.js and its dependencies are (c) Ian Lunn Design 2012 - 2013 unless otherwise stated.
*/

//Selector Variables
$sequenceContainer: "#sequence"; //the container for Sequence
$sequenceCanvas: ".sequence-canvas"; //the element that contains Sequence's frames
$animateIn: ".animate-in"; //the animate-in class (can be changed in future versions of Sequence)
$animateOut: ".animate-out"; //the animate-out class (can be changed in future versions of Sequence)
$nextButton: ".sequence-next"; //next frame button
$prevButton: ".sequence-prev"; //previous frame button
$pauseButton: ".sequence-pause"; //pause button
$pagination: ".sequence-pagination"; //the element used for pagination
$whenPaused: ".sequence-paused"; //pause indicator
$sequencePreloader: ".sequence-preloader"; //the preloader element

@import "partials/reset"; //import Eric Meyer's CSS Reset. Remove this if you have a reset in your main stylesheet
@import "partials/mixins"; //vendor prefixing mixins

/* THEME STYLES */

/* when in fallback mode (for browsers that don't support transitions) hide anything outside of the Sequence container */
#{$sequenceContainer}.sequence-fallback {
    overflow: hidden;
}
	
#{$sequenceContainer} { /* the Sequence container */
	position: absolute; /* required - makes the position of animated elements relative to the Sequence element */
	overflow: hidden;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;

	> #{$sequenceCanvas} { /* required - make the Sequence canvas the same height and width as the container */
		height: 100%; 
		width: 100%;
	}

	> #{$sequenceCanvas} > li { /* each Sequence frame */
		position: absolute; /* required - allows Sequence to change the z-index of frames, so the active frame is always on top */
		width: 100%; /* required - makes the frame the same width as the container */
		height: 100%; /* required - makes the frame the same height as the container */
		z-index: 1; /* required - allows Sequence to change the z-index of frames, so the active frame is always on top */
	}

	> #{$sequenceCanvas} li > * { /* each top level element to be animated */
		position: absolute; /* required - make each animated element within a Sequence frame position absolute so their left/right/top/bottom can be manipulated */
	}

	.logo {
		position: absolute;
		z-index: 10;
		bottom: 20px;
		right: 20px;
		@include prefixed(transition-duration, .5s);
	}

	.logo:hover {
		bottom: 26px;
	}

	.slide {
		height: 100%;
		width: 100%;

		color: white;
		text-align: center;
		font-family: "Ubuntu", serif;
		font-weight: bold;
		text-transform: uppercase;
		text-shadow: 1px 1px 1px #333;

		h2 {
			font-size: 6em;
			padding: .2em;
		}

		h3 {
			font-size: 1.6em;
			line-height: 120%;
			padding: 1em;
		}
	}

	.slide1 {
		background: #32742C;
	}

	.slide2 {
		background: #F18D05;
	}

	.slide3 {
		background: #113F8C;
	}
	
	.slide {
		opacity: 0;
		@include prefixed(transition-duration, .5s);
		@include prefixed(transition-property, "opacity");
		@include prefixed(transition-timing-function, linear);
	}

	#{$animateIn} .slide {
		opacity: 1;
	}

	#{$animateOut} .slide {
		opacity: 0;
	}
}